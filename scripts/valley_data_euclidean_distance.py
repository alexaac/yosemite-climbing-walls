# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# valley_data_euclidean_distance.py
# Created on: 2020-01-17 19:25:58.00000
#   (generated by ArcGIS/ModelBuilder)
# Usage: valley_data_euclidean_distance <Springs_EDist> <Trails_EDist> <Climb_EDist> <Rivers_EDist> <Parking_EDist> <AOI> <Roads_EDist> <Pos_Climbing_Areas> 
# Description: 
# ---------------------------------------------------------------------------

# Set the necessary product code
# import arcinfo


# Import arcpy module
import arcpy

# Script arguments
Springs_EDist = arcpy.GetParameterAsText(0)
if Springs_EDist == '#' or not Springs_EDist:
    Springs_EDist = "C:\\GIS\\scratch.gdb\\Springs_EDist" # provide a default value if unspecified

Trails_EDist = arcpy.GetParameterAsText(1)
if Trails_EDist == '#' or not Trails_EDist:
    Trails_EDist = "C:\\GIS\\scratch.gdb\\Trails_EDist" # provide a default value if unspecified

Climb_EDist = arcpy.GetParameterAsText(2)
if Climb_EDist == '#' or not Climb_EDist:
    Climb_EDist = "C:\\GIS\\scratch.gdb\\Climb_EDist" # provide a default value if unspecified

Rivers_EDist = arcpy.GetParameterAsText(3)
if Rivers_EDist == '#' or not Rivers_EDist:
    Rivers_EDist = "C:\\GIS\\scratch.gdb\\Rivers_EDist" # provide a default value if unspecified

Parking_EDist = arcpy.GetParameterAsText(4)
if Parking_EDist == '#' or not Parking_EDist:
    Parking_EDist = "C:\\GIS\\scratch.gdb\\Parking_EDist" # provide a default value if unspecified

AOI = arcpy.GetParameterAsText(5)
if AOI == '#' or not AOI:
    AOI = "C:\\GIS\\helper_data.gdb\\AOI" # provide a default value if unspecified

Roads_EDist = arcpy.GetParameterAsText(6)
if Roads_EDist == '#' or not Roads_EDist:
    Roads_EDist = "C:\\GIS\\scratch.gdb\\Roads_EDist" # provide a default value if unspecified

Pos_Climbing_Areas = arcpy.GetParameterAsText(7)
if Pos_Climbing_Areas == '#' or not Pos_Climbing_Areas:
    Pos_Climbing_Areas = "C:\\GIS\\helper_data.gdb\\Pos_Climbing_Areas" # provide a default value if unspecified

# Local variables:
YOSE_Parking_20190521_clp = "C:\\GIS\\valley_data.gdb\\YOSE_Parking_20190521_clp"
Barrier = "C:\\GIS\\scratch.gdb\\Barrier"
Output_direction_raster__3_ = ""
Output_back_direction_raster__3_ = ""
Rivers_clp = "C:\\GIS\\valley_data.gdb\\Rivers_clp"
Output_direction_raster__5_ = ""
Output_back_direction_raster__5_ = ""
Yosemite_Climbing_Areas_clp = "C:\\GIS\\valley_data.gdb\\Yosemite_Climbing_Areas_clp"
Output_direction_raster__6_ = ""
Output_back_direction_raster__6_ = ""
Trails_clp = "C:\\GIS\\valley_data.gdb\\Trails_clp"
Output_direction_raster = ""
Output_back_direction_raster = ""
Springs_clp = "C:\\GIS\\valley_data.gdb\\Springs_clp"
Output_back_direction_raster__4_ = ""
Output_direction_raster__4_ = ""
Yosemite_Roads_clp = "C:\\GIS\\valley_data.gdb\\Yosemite_Roads_clp"
Output_direction_raster__8_ = ""
Output_back_direction_raster__8_ = ""

# Set Geoprocessing environments
arcpy.env.scratchWorkspace = "C:\\GIS\\scratch.gdb"
arcpy.env.workspace = "C:\\GIS\\scratch.gdb"

# Process: Polygon To Line
arcpy.PolygonToLine_management(AOI, Barrier, "IGNORE_NEIGHBORS")

# Process: Euclidean Distance (3)
arcpy.gp.EucDistance_sa(YOSE_Parking_20190521_clp, Parking_EDist, "", Pos_Climbing_Areas, Output_direction_raster__3_, "PLANAR", Barrier, Output_back_direction_raster__3_)

# Process: Euclidean Distance (5)
arcpy.gp.EucDistance_sa(Rivers_clp, Rivers_EDist, "", Pos_Climbing_Areas, Output_direction_raster__5_, "PLANAR", Barrier, Output_back_direction_raster__5_)

# Process: Euclidean Distance (6)
arcpy.gp.EucDistance_sa(Yosemite_Climbing_Areas_clp, Climb_EDist, "", Pos_Climbing_Areas, Output_direction_raster__6_, "PLANAR", Barrier, Output_back_direction_raster__6_)

# Process: Euclidean Distance
arcpy.gp.EucDistance_sa(Trails_clp, Trails_EDist, "", Pos_Climbing_Areas, Output_direction_raster, "PLANAR", Barrier, Output_back_direction_raster)

# Process: Euclidean Distance (4)
arcpy.gp.EucDistance_sa(Springs_clp, Springs_EDist, "", Pos_Climbing_Areas, Output_direction_raster__4_, "PLANAR", Barrier, Output_back_direction_raster__4_)

# Process: Euclidean Distance (8)
arcpy.gp.EucDistance_sa(Yosemite_Roads_clp, Roads_EDist, "", Pos_Climbing_Areas, Output_direction_raster__8_, "PLANAR", Barrier, Output_back_direction_raster__8_)

